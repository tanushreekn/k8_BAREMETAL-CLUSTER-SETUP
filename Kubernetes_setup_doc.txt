Kubernetes Master Setup
=======================================
sudo su -
# upgrade & install depedencies
apt update && apt upgrade -y && apt dist-upgrade -y
apt install -y apt-transport-https ca-certificates curl software-properties-common gnupg2 net-tools

# set FQDN hostname
hostnamectl set-hostname $(curl -s http://169.254.169.254/latest/meta-data/local-hostname)

# install docker
apt install -y docker.io

cat << EOF > /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

systemctl stop docker
systemctl start docker
systemctl enable docker

cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF
sysctl --system

# install kubelet kubeadm kubectl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
apt update
apt install kubelet="1.22.17-00" 
apt install kubeadm="1.22.17-00"
apt install kubectl="1.22.17-00"


cat << EOF > /etc/kubernetes/aws.yaml
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v1.22.17
networking:
  serviceSubnet: "10.100.0.0/16"
  podSubnet: "10.244.0.0/16"
apiServer:
  extraArgs:
    cloud-provider: "aws"
controllerManager:
  extraArgs:
    cloud-provider: "aws"
EOF

# init cluster
kubeadm init --config /etc/kubernetes/aws.yaml

//kubeadm join 10.0.0.230:6443 --token 58dock.2gbzaxqw2off7gqo \
        --discovery-token-ca-cert-hash sha256:0868fa37766bd15186ce53d809fe03a30820c9a31fefd820472f94f5564ba291
//(Save this details. It is used in node.yaml to connect Control plane) 

//tanuhsree unique for evryone copy and keep
//kubeadm join 10.0.0.196:6443 --token bfylv7.eru0byvl2pa9vrl9 \
        --discovery-token-ca-cert-hash sha256:2bb30453a86452cf7ff6ffb273508ce69c8a58c80f6efe99f743f9517f1255d4


# save kube config
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# install Calico 

kubectl get nodes
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml
wget https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/custom-resources.yaml
//replace cidr with 10.244.0.0/16 in   custom-resources.yaml
kubectl apply -f custom-resources.yaml


//kubectl apply -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml
//kubectl delete -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml

//kubectl apply -f https://docs.projectcalico.org/manifests/calico-typha.yaml
//kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml
// kubectl delete -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml


Kubernetes Worker Node Setup
====================================
sudo su -
# upgrade & install depedencies
apt update && apt upgrade -y && apt dist-upgrade -y
apt install -y apt-transport-https ca-certificates curl software-properties-common gnupg2 net-tools

# set FQDN hostname
hostnamectl set-hostname $(curl -s http://169.254.169.254/latest/meta-data/local-hostname)

# install docker
apt install -y docker.io
cat << EOF > /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

systemctl stop docker
systemctl start docker
systemctl enable docker

cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

sysctl --system

# install kubelet kubeadm kubectl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
apt update
apt install kubelet="1.22.17-00"
apt install kubeadm="1.22.17-00"
apt install kubectl="1.22.17-00"

1. //hostname -f
       ip-10-0-0-29.ap-south-1.compute.internal
	   
2. //kubeadm join 10.0.0.196:6443 --token bfylv7.eru0byvl2pa9vrl9 \
        --discovery-token-ca-cert-hash sha256:2bb30453a86452cf7ff6ffb273508ce69c8a58c80f6efe99f743f9517f1255d4
		
		
//modify the below yaml file as per the above token  1 and 2 		
cat << EOF > /etc/kubernetes/node.yml
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: JoinConfiguration
discovery:
  bootstrapToken:
    token: "bfylv7.eru0byvl2pa9vrl9"
    apiServerEndpoint: "10.0.0.196:6443"
    caCertHashes:
      - "sha256:2bb30453a86452cf7ff6ffb273508ce69c8a58c80f6efe99f743f9517f1255d4"
nodeRegistration:
  name: ip-10-0-0-29.ap-south-1.compute.internal
  kubeletExtraArgs:
  cloud-provider: aws
EOF

#join Cluster
kubeadm join --config /etc/kubernetes/node.yml
